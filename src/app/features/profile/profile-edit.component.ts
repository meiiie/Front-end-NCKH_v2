import { Component, signal, computed, inject, OnInit, ChangeDetectionStrategy, ViewEncapsulation } from '@angular/core';
import { CommonModule } from '@angular/common';
import { RouterModule, Router } from '@angular/router';
import { FormsModule } from '@angular/forms';
import { AuthService } from '../../core/services/auth.service';

interface ProfileEdit {
  fullName: string;
  email: string;
  phone: string;
  dateOfBirth: string;
  address: string;
  bio: string;
  interests: string[];
  learningGoals: string[];
  preferredSubjects: string[];
  studySchedule: {
    preferredStudyTime: string;
    studyDays: string[];
    studyDuration: number;
    breakInterval: number;
  };
  socialLinks: {
    platform: string;
    url: string;
    isPublic: boolean;
  }[];
  notifications: {
    emailNotifications: boolean;
    pushNotifications: boolean;
    assignmentReminders: boolean;
    courseUpdates: boolean;
    forumUpdates: boolean;
  };
  privacy: {
    profileVisibility: 'public' | 'private' | 'friends';
    showEmail: boolean;
    showPhone: boolean;
    showProgress: boolean;
  };
}

interface StudyDay {
  value: string;
  label: string;
}

interface SocialPlatform {
  value: string;
  label: string;
  icon: string;
}

@Component({
  selector: 'app-profile-edit',
  imports: [CommonModule, RouterModule, FormsModule],
  encapsulation: ViewEncapsulation.None,
  standalone: true,
  template: `
    <div class="bg-gradient-to-br from-slate-50 via-blue-50 to-indigo-100 min-h-screen">
      <!-- Header -->
      <div class="bg-white shadow-xl border-b border-gray-200">
        <div class="max-w-4xl mx-auto px-6 py-6">
          <div class="flex items-center justify-between">
            <div class="flex items-center space-x-4">
              <button (click)="goBack()"
                      class="flex items-center space-x-2 px-4 py-2 bg-gray-100 text-gray-700 rounded-lg hover:bg-gray-200 transition-colors">
                <svg class="w-5 h-5" fill="currentColor" viewBox="0 0 20 20">
                  <path fill-rule="evenodd" d="M9.707 16.707a1 1 0 01-1.414 0l-6-6a1 1 0 010-1.414l6-6a1 1 0 011.414 1.414L5.414 9H17a1 1 0 110 2H5.414l4.293 4.293a1 1 0 010 1.414z" clip-rule="evenodd"></path>
                </svg>
                <span>Quay l·∫°i</span>
              </button>
              <div>
                <h1 class="text-3xl font-bold text-gray-900">Ch·ªânh s·ª≠a h·ªì s∆°</h1>
                <p class="text-gray-600">C·∫≠p nh·∫≠t th√¥ng tin c√° nh√¢n v√† t√πy ch·ªçn</p>
              </div>
            </div>
          </div>
        </div>
      </div>

      <div class="max-w-4xl mx-auto px-6 py-8">
        <form (ngSubmit)="saveProfile()" #profileForm="ngForm">
          <div class="space-y-8">
            <!-- Personal Information -->
            <div class="bg-white rounded-2xl shadow-lg p-8">
              <h2 class="text-xl font-bold text-gray-900 mb-6">üë§ Th√¥ng tin c√° nh√¢n</h2>
              
              <div class="grid grid-cols-1 md:grid-cols-2 gap-6">
                <!-- Full Name -->
                <div>
                  <label class="block text-sm font-medium text-gray-700 mb-2">H·ªç v√† t√™n *</label>
                  <input type="text" 
                         [ngModel]="profile().fullName"
                         (ngModelChange)="updateProfile('fullName', $event)"
                         name="fullName"
                         class="w-full px-4 py-3 border border-gray-300 rounded-xl focus:outline-none focus:ring-2 focus:ring-blue-500 focus:border-transparent"
                         required>
                </div>

                <!-- Email -->
                <div>
                  <label class="block text-sm font-medium text-gray-700 mb-2">Email *</label>
                  <input type="email" 
                         [ngModel]="profile().email"
                         (ngModelChange)="updateProfile('email', $event)"
                         name="email"
                         class="w-full px-4 py-3 border border-gray-300 rounded-xl focus:outline-none focus:ring-2 focus:ring-blue-500 focus:border-transparent"
                         required>
                </div>

                <!-- Phone -->
                <div>
                  <label class="block text-sm font-medium text-gray-700 mb-2">S·ªë ƒëi·ªán tho·∫°i</label>
                  <input type="tel" 
                         [ngModel]="profile().phone"
                         (ngModelChange)="updateProfile('phone', $event)"
                         name="phone"
                         class="w-full px-4 py-3 border border-gray-300 rounded-xl focus:outline-none focus:ring-2 focus:ring-blue-500 focus:border-transparent">
                </div>

                <!-- Date of Birth -->
                <div>
                  <label class="block text-sm font-medium text-gray-700 mb-2">Ng√†y sinh</label>
                  <input type="date" 
                         [ngModel]="profile().dateOfBirth"
                         (ngModelChange)="updateProfile('dateOfBirth', $event)"
                         name="dateOfBirth"
                         class="w-full px-4 py-3 border border-gray-300 rounded-xl focus:outline-none focus:ring-2 focus:ring-blue-500 focus:border-transparent">
                </div>

                <!-- Address -->
                <div class="md:col-span-2">
                  <label class="block text-sm font-medium text-gray-700 mb-2">ƒê·ªãa ch·ªâ</label>
                  <textarea 
                    [ngModel]="profile().address"
                    (ngModelChange)="updateProfile('address', $event)"
                    name="address"
                    rows="3"
                    class="w-full px-4 py-3 border border-gray-300 rounded-xl focus:outline-none focus:ring-2 focus:ring-blue-500 focus:border-transparent resize-none"></textarea>
                </div>

                <!-- Bio -->
                <div class="md:col-span-2">
                  <label class="block text-sm font-medium text-gray-700 mb-2">Gi·ªõi thi·ªáu b·∫£n th√¢n</label>
                  <textarea 
                    [ngModel]="profile().bio"
                    (ngModelChange)="updateProfile('bio', $event)"
                    name="bio"
                    rows="4"
                    placeholder="Vi·∫øt m·ªôt v√†i d√≤ng gi·ªõi thi·ªáu v·ªÅ b·∫£n th√¢n..."
                    class="w-full px-4 py-3 border border-gray-300 rounded-xl focus:outline-none focus:ring-2 focus:ring-blue-500 focus:border-transparent resize-none"></textarea>
                </div>
              </div>
            </div>

            <!-- Learning Preferences -->
            <div class="bg-white rounded-2xl shadow-lg p-8">
              <h2 class="text-xl font-bold text-gray-900 mb-6">üéì S·ªü th√≠ch h·ªçc t·∫≠p</h2>
              
              <div class="space-y-6">
                <!-- Interests -->
                <div>
                  <label class="block text-sm font-medium text-gray-700 mb-2">Lƒ©nh v·ª±c quan t√¢m</label>
                  <div class="grid grid-cols-2 md:grid-cols-3 gap-3">
                    @for (interest of availableInterests(); track interest) {
                      <label class="flex items-center space-x-2 p-3 border border-gray-200 rounded-lg hover:bg-blue-50 cursor-pointer">
                        <input type="checkbox" 
                               [value]="interest"
                               [checked]="profile().interests.includes(interest)"
                               (change)="toggleInterest(interest)"
                               class="w-4 h-4 text-blue-600 border-gray-300 rounded focus:ring-blue-500">
                        <span class="text-sm text-gray-700">{{ interest }}</span>
                      </label>
                    }
                  </div>
                </div>

                <!-- Learning Goals -->
                <div>
                  <label class="block text-sm font-medium text-gray-700 mb-2">M·ª•c ti√™u h·ªçc t·∫≠p</label>
                  <div class="space-y-3">
                    @for (goal of profile().learningGoals; track $index) {
                      <div class="flex items-center space-x-3">
                        <input type="text" 
                               [ngModel]="profile().learningGoals[$index]"
                               (ngModelChange)="updateLearningGoal($index, $event)"
                               [name]="'goal-' + $index"
                               class="flex-1 px-4 py-3 border border-gray-300 rounded-xl focus:outline-none focus:ring-2 focus:ring-blue-500 focus:border-transparent">
                        <button type="button" 
                                (click)="removeLearningGoal($index)"
                                class="p-3 text-red-600 hover:bg-red-100 rounded-lg transition-colors">
                          <svg class="w-5 h-5" fill="currentColor" viewBox="0 0 20 20">
                            <path fill-rule="evenodd" d="M4.293 4.293a1 1 0 011.414 0L10 8.586l4.293-4.293a1 1 0 111.414 1.414L11.414 10l4.293 4.293a1 1 0 01-1.414 1.414L10 11.414l-4.293 4.293a1 1 0 01-1.414-1.414L8.586 10 4.293 5.707a1 1 0 010-1.414z" clip-rule="evenodd"></path>
                          </svg>
                        </button>
                      </div>
                    }
                    <button type="button" 
                            (click)="addLearningGoal()"
                            class="w-full px-4 py-3 border-2 border-dashed border-gray-300 rounded-xl text-gray-600 hover:border-blue-400 hover:text-blue-600 transition-colors">
                      + Th√™m m·ª•c ti√™u h·ªçc t·∫≠p
                    </button>
                  </div>
                </div>

                <!-- Preferred Subjects -->
                <div>
                  <label class="block text-sm font-medium text-gray-700 mb-2">M√¥n h·ªçc ∆∞a th√≠ch</label>
                  <div class="grid grid-cols-2 md:grid-cols-3 gap-3">
                    @for (subject of availableSubjects(); track subject) {
                      <label class="flex items-center space-x-2 p-3 border border-gray-200 rounded-lg hover:bg-green-50 cursor-pointer">
                        <input type="checkbox" 
                               [value]="subject"
                               [checked]="profile().preferredSubjects.includes(subject)"
                               (change)="toggleSubject(subject)"
                               class="w-4 h-4 text-green-600 border-gray-300 rounded focus:ring-green-500">
                        <span class="text-sm text-gray-700">{{ subject }}</span>
                      </label>
                    }
                  </div>
                </div>
              </div>
            </div>

            <!-- Study Schedule -->
            <div class="bg-white rounded-2xl shadow-lg p-8">
              <h2 class="text-xl font-bold text-gray-900 mb-6">üìÖ L·ªãch h·ªçc t·∫≠p</h2>
              
              <div class="grid grid-cols-1 md:grid-cols-2 gap-6">
                <!-- Preferred Study Time -->
                <div>
                  <label class="block text-sm font-medium text-gray-700 mb-2">Th·ªùi gian h·ªçc ∆∞a th√≠ch</label>
                  <select [ngModel]="profile().studySchedule.preferredStudyTime"
           (ngModelChange)="updateStudySchedule('preferredStudyTime', $event)" 
                          name="preferredStudyTime"
                          class="w-full px-4 py-3 border border-gray-300 rounded-xl focus:outline-none focus:ring-2 focus:ring-blue-500 focus:border-transparent">
                    <option value="morning">S√°ng (6:00 - 12:00)</option>
                    <option value="afternoon">Chi·ªÅu (12:00 - 18:00)</option>
                    <option value="evening">T·ªëi (18:00 - 24:00)</option>
                    <option value="flexible">Linh ho·∫°t</option>
                  </select>
                </div>

                <!-- Study Duration -->
                <div>
                  <label class="block text-sm font-medium text-gray-700 mb-2">Th·ªùi gian h·ªçc m·ªói ng√†y (gi·ªù)</label>
                  <input type="number" 
                         [ngModel]="profile().studySchedule.studyDuration"
                         (ngModelChange)="updateStudySchedule('studyDuration', $event)"
                         name="studyDuration"
                         min="1" max="12"
                         class="w-full px-4 py-3 border border-gray-300 rounded-xl focus:outline-none focus:ring-2 focus:ring-blue-500 focus:border-transparent">
                </div>

                <!-- Study Days -->
                <div>
                  <label class="block text-sm font-medium text-gray-700 mb-2">Ng√†y h·ªçc trong tu·∫ßn</label>
                  <div class="grid grid-cols-2 gap-2">
                    @for (day of studyDays(); track day.value) {
                      <label class="flex items-center space-x-2 p-2 border border-gray-200 rounded-lg hover:bg-purple-50 cursor-pointer">
                        <input type="checkbox" 
                               [value]="day.value"
                               [checked]="profile().studySchedule.studyDays.includes(day.value)"
                               (change)="toggleStudyDay(day.value)"
                               class="w-4 h-4 text-purple-600 border-gray-300 rounded focus:ring-purple-500">
                        <span class="text-sm text-gray-700">{{ day.label }}</span>
                      </label>
                    }
                  </div>
                </div>

                <!-- Break Interval -->
                <div>
                  <label class="block text-sm font-medium text-gray-700 mb-2">Th·ªùi gian ngh·ªâ (ph√∫t)</label>
                <input type="number" 
                       [ngModel]="profile().studySchedule.breakInterval"
                       (ngModelChange)="updateStudySchedule('breakInterval', $event)"
                       name="breakInterval"
                       min="5" max="60"
                       class="w-full px-4 py-3 border border-gray-300 rounded-xl focus:outline-none focus:ring-2 focus:ring-blue-500 focus:border-transparent">
                </div>
              </div>
            </div>

            <!-- Social Links -->
            <div class="bg-white rounded-2xl shadow-lg p-8">
              <h2 class="text-xl font-bold text-gray-900 mb-6">üîó Li√™n k·∫øt x√£ h·ªôi</h2>
              
              <div class="space-y-4">
                 @for (link of profile().socialLinks; track $index) {
                  <div class="flex items-center space-x-4 p-4 bg-gray-50 rounded-xl">
                    <select [ngModel]="link.platform"
                            (ngModelChange)="updateSocialLink($index, 'platform', $event)"
                            [name]="'platform-' + $index"
                            class="px-4 py-3 border border-gray-300 rounded-xl focus:outline-none focus:ring-2 focus:ring-blue-500 focus:border-transparent">
                      @for (platform of socialPlatforms(); track platform.value) {
                        <option [value]="platform.value">{{ platform.label }}</option>
                      }
                    </select>
                    <input type="url" 
                           [ngModel]="link.url"
                           (ngModelChange)="updateSocialLink($index, 'url', $event)"
                           [name]="'url-' + $index"
                           placeholder="https://..."
                           class="flex-1 px-4 py-3 border border-gray-300 rounded-xl focus:outline-none focus:ring-2 focus:ring-blue-500 focus:border-transparent">
                    <label class="flex items-center space-x-2">
                      <input type="checkbox" 
                             [ngModel]="link.isPublic"
                             (ngModelChange)="updateSocialLink($index, 'isPublic', $event)"
                             [name]="'isPublic-' + $index"
                             class="w-4 h-4 text-blue-600 border-gray-300 rounded focus:ring-blue-500">
                      <span class="text-sm text-gray-700">C√¥ng khai</span>
                    </label>
                    <button type="button" 
                            (click)="removeSocialLink($index)"
                            class="p-3 text-red-600 hover:bg-red-100 rounded-lg transition-colors">
                      <svg class="w-5 h-5" fill="currentColor" viewBox="0 0 20 20">
                        <path fill-rule="evenodd" d="M4.293 4.293a1 1 0 011.414 0L10 8.586l4.293-4.293a1 1 0 111.414 1.414L11.414 10l4.293 4.293a1 1 0 01-1.414 1.414L10 11.414l-4.293 4.293a1 1 0 01-1.414-1.414L8.586 10 4.293 5.707a1 1 0 010-1.414z" clip-rule="evenodd"></path>
                      </svg>
                    </button>
                  </div>
                }
                <button type="button" 
                        (click)="addSocialLink()"
                        class="w-full px-4 py-3 border-2 border-dashed border-gray-300 rounded-xl text-gray-600 hover:border-blue-400 hover:text-blue-600 transition-colors">
                      + Th√™m li√™n k·∫øt x√£ h·ªôi
                </button>
              </div>
            </div>

            <!-- Notifications -->
            <div class="bg-white rounded-2xl shadow-lg p-8">
              <h2 class="text-xl font-bold text-gray-900 mb-6">üîî Th√¥ng b√°o</h2>
              
              <div class="space-y-4">
                <label class="flex items-center space-x-3">
                  <input type="checkbox" 
                         [ngModel]="profile().notifications.emailNotifications"
           (ngModelChange)="updateNotifications('emailNotifications', $event)"
                         name="emailNotifications"
                         class="w-4 h-4 text-blue-600 border-gray-300 rounded focus:ring-blue-500">
                  <span class="text-gray-700">Th√¥ng b√°o qua email</span>
                </label>
                
                <label class="flex items-center space-x-3">
                  <input type="checkbox" 
                         [ngModel]="profile().notifications.pushNotifications"
            (ngModelChange)="updateNotifications('pushNotifications', $event)"
                         name="pushNotifications"
                         class="w-4 h-4 text-blue-600 border-gray-300 rounded focus:ring-blue-500">
                  <span class="text-gray-700">Th√¥ng b√°o ƒë·∫©y</span>
                </label>
                
                <label class="flex items-center space-x-3">
                  <input type="checkbox" 
                         [ngModel]="profile().notifications.assignmentReminders"
          (ngModelChange)="updateNotifications('assignmentReminders', $event)"
                         name="assignmentReminders"
                         class="w-4 h-4 text-blue-600 border-gray-300 rounded focus:ring-blue-500">
                  <span class="text-gray-700">Nh·∫Øc nh·ªü b√†i t·∫≠p</span>
                </label>
                
                <label class="flex items-center space-x-3">
                  <input type="checkbox" 
                         [ngModel]="profile().notifications.courseUpdates"
                (ngModelChange)="updateNotifications('courseUpdates', $event)"
                         name="courseUpdates"
                         class="w-4 h-4 text-blue-600 border-gray-300 rounded focus:ring-blue-500">
                  <span class="text-gray-700">C·∫≠p nh·∫≠t kh√≥a h·ªçc</span>
                </label>
                
                <label class="flex items-center space-x-3">
                  <input type="checkbox" 
                         [ngModel]="profile().notifications.forumUpdates"
                 (ngModelChange)="updateNotifications('forumUpdates', $event)"
                         name="forumUpdates"
                         class="w-4 h-4 text-blue-600 border-gray-300 rounded focus:ring-blue-500">
                  <span class="text-gray-700">C·∫≠p nh·∫≠t di·ªÖn ƒë√†n</span>
                </label>
              </div>
            </div>

            <!-- Privacy Settings -->
            <div class="bg-white rounded-2xl shadow-lg p-8">
              <h2 class="text-xl font-bold text-gray-900 mb-6">üîí Quy·ªÅn ri√™ng t∆∞</h2>
              
              <div class="space-y-6">
                <div>
                  <label class="block text-sm font-medium text-gray-700 mb-2">Hi·ªÉn th·ªã h·ªì s∆°</label>
                  <select [ngModel]="profile().privacy.profileVisibility"
                  (ngModelChange)="updatePrivacy('profileVisibility', $event)" 
                          name="profileVisibility"
                          class="w-full px-4 py-3 border border-gray-300 rounded-xl focus:outline-none focus:ring-2 focus:ring-blue-500 focus:border-transparent">
                    <option value="public">C√¥ng khai</option>
                    <option value="friends">B·∫°n b√®</option>
                    <option value="private">Ri√™ng t∆∞</option>
                  </select>
                </div>
                
                <div class="space-y-4">
                  <label class="flex items-center space-x-3">
                    <input type="checkbox" 
                            [ngModel]="profile().privacy.showEmail"
                            (ngModelChange)="updatePrivacy('showEmail', $event)"
                           name="showEmail"
                           class="w-4 h-4 text-blue-600 border-gray-300 rounded focus:ring-blue-500">
                    <span class="text-gray-700">Hi·ªÉn th·ªã email</span>
                  </label>
                  
                  <label class="flex items-center space-x-3">
                    <input type="checkbox" 
                            [ngModel]="profile().privacy.showPhone"
                            (ngModelChange)="updatePrivacy('showPhone', $event)"
                           name="showPhone"
                           class="w-4 h-4 text-blue-600 border-gray-300 rounded focus:ring-blue-500">
                    <span class="text-gray-700">Hi·ªÉn th·ªã s·ªë ƒëi·ªán tho·∫°i</span>
                  </label>
                  
                  <label class="flex items-center space-x-3">
                    <input type="checkbox" 
                           [ngModel]="profile().privacy.showProgress"
                       (ngModelChange)="updatePrivacy('showProgress', $event)"
                           name="showProgress"
                           class="w-4 h-4 text-blue-600 border-gray-300 rounded focus:ring-blue-500">
                    <span class="text-gray-700">Hi·ªÉn th·ªã ti·∫øn ƒë·ªô h·ªçc t·∫≠p</span>
                  </label>
                </div>
              </div>
            </div>

            <!-- Submit Actions -->
            <div class="bg-white rounded-2xl shadow-lg p-8">
              <div class="flex items-center justify-between">
                <div class="text-sm text-gray-600">
                  <p>C√°c thay ƒë·ªïi s·∫Ω ƒë∆∞·ª£c l∆∞u t·ª± ƒë·ªông</p>
                  <p>Th√¥ng tin c√° nh√¢n s·∫Ω ƒë∆∞·ª£c b·∫£o m·∫≠t</p>
                </div>
                
                <div class="flex space-x-4">
                  <button type="button" 
                          (click)="resetProfile()"
                          class="px-6 py-3 bg-gray-100 text-gray-700 rounded-lg hover:bg-gray-200 transition-colors">
                    ƒê·∫∑t l·∫°i
                  </button>
                  <button type="submit" 
                          class="px-6 py-3 bg-blue-600 text-white rounded-lg hover:bg-blue-700 transition-colors">
                    L∆∞u thay ƒë·ªïi
                  </button>
                </div>
              </div>
            </div>
          </div>
        </form>
      </div>
    </div>
  `,
  changeDetection: ChangeDetectionStrategy.OnPush
})
export class ProfileEditComponent implements OnInit {
  protected authService = inject(AuthService);
  private router = inject(Router);

  // Component state
  profile = signal<ProfileEdit>({
    fullName: 'Nguy·ªÖn VƒÉn H·∫£i',
    email: 'student@demo.com',
    phone: '0123456789',
    dateOfBirth: '1995-06-15',
    address: '123 ƒê∆∞·ªùng ABC, Qu·∫≠n 1, TP.HCM',
    bio: 'T√¥i l√† sinh vi√™n nƒÉm 3 chuy√™n ng√†nh H√†ng h·∫£i t·∫°i Tr∆∞·ªùng ƒê·∫°i h·ªçc H√†ng h·∫£i Vi·ªát Nam.',
    interests: ['An to√†n h√†ng h·∫£i', 'ƒêi·ªÅu khi·ªÉn t√†u'],
    learningGoals: [
      'Ho√†n th√†nh ch·ª©ng ch·ªâ STCW',
      'ƒê·∫°t ƒë∆∞·ª£c ch·ª©ng ch·ªâ thuy·ªÅn tr∆∞·ªüng h·∫°ng 2'
    ],
    preferredSubjects: ['An to√†n h√†ng h·∫£i', 'ƒêi·ªÅu khi·ªÉn t√†u'],
    studySchedule: {
      preferredStudyTime: 'evening',
      studyDays: ['monday', 'wednesday', 'friday', 'sunday'],
      studyDuration: 3,
      breakInterval: 15
    },
    socialLinks: [
      {
        platform: 'linkedin',
        url: 'https://linkedin.com/in/nguyenvanhai',
        isPublic: true
      }
    ],
    notifications: {
      emailNotifications: true,
      pushNotifications: true,
      assignmentReminders: true,
      courseUpdates: true,
      forumUpdates: false
    },
    privacy: {
      profileVisibility: 'public',
      showEmail: false,
      showPhone: false,
      showProgress: true
    }
  });

  // Mock data
  availableInterests = signal<string[]>([
    'An to√†n h√†ng h·∫£i',
    'ƒêi·ªÅu khi·ªÉn t√†u',
    'K·ªπ thu·∫≠t t√†u bi·ªÉn',
    'Lu·∫≠t h√†ng h·∫£i',
    'Qu·∫£n l√Ω c·∫£ng',
    'Logistics h√†ng h·∫£i',
    'C√¥ng ngh·ªá h√†ng h·∫£i',
    'M√¥i tr∆∞·ªùng bi·ªÉn'
  ]);

  availableSubjects = signal<string[]>([
    'An to√†n h√†ng h·∫£i',
    'ƒêi·ªÅu khi·ªÉn t√†u',
    'K·ªπ thu·∫≠t t√†u bi·ªÉn',
    'Lu·∫≠t h√†ng h·∫£i',
    'Qu·∫£n l√Ω c·∫£ng',
    'Logistics h√†ng h·∫£i',
    'C√¥ng ngh·ªá h√†ng h·∫£i',
    'M√¥i tr∆∞·ªùng bi·ªÉn',
    'Kinh t·∫ø h√†ng h·∫£i',
    'Ti·∫øng Anh h√†ng h·∫£i'
  ]);

  studyDays = signal<StudyDay[]>([
    { value: 'monday', label: 'Th·ª© 2' },
    { value: 'tuesday', label: 'Th·ª© 3' },
    { value: 'wednesday', label: 'Th·ª© 4' },
    { value: 'thursday', label: 'Th·ª© 5' },
    { value: 'friday', label: 'Th·ª© 6' },
    { value: 'saturday', label: 'Th·ª© 7' },
    { value: 'sunday', label: 'Ch·ªß nh·∫≠t' }
  ]);

  socialPlatforms = signal<SocialPlatform[]>([
    { value: 'linkedin', label: 'LinkedIn', icon: 'üíº' },
    { value: 'facebook', label: 'Facebook', icon: 'üìò' },
    { value: 'twitter', label: 'Twitter', icon: 'üê¶' },
    { value: 'instagram', label: 'Instagram', icon: 'üì∑' },
    { value: 'youtube', label: 'YouTube', icon: 'üì∫' },
    { value: 'github', label: 'GitHub', icon: 'üíª' }
  ]);

  ngOnInit(): void {
    console.log('üîß Profile Edit - Component initialized');
  }

  updateProfile(field: string, value: any): void {
    this.profile.update(p => ({
      ...p,
      [field]: value
    }));
    console.log('üîß Profile Edit - Profile field updated:', field, value);
  }

  updateLearningGoal(index: number, value: string): void {
    this.profile.update(p => ({
      ...p,
      learningGoals: p.learningGoals.map((goal, i) => i === index ? value : goal)
    }));
    console.log('üîß Profile Edit - Learning goal updated:', index, value);
  }

  updateStudySchedule(field: string, value: any): void {
    this.profile.update(p => ({
      ...p,
      studySchedule: {
        ...p.studySchedule,
        [field]: value
      }
    }));
    console.log('üîß Profile Edit - Study schedule updated:', field, value);
  }

  updateSocialLink(index: number, field: string, value: any): void {
    this.profile.update(p => ({
      ...p,
      socialLinks: p.socialLinks.map((link, i) => 
        i === index ? { ...link, [field]: value } : link
      )
    }));
    console.log('üîß Profile Edit - Social link updated:', index, field, value);
  }

  updateNotifications(field: string, value: any): void {
    this.profile.update(p => ({
      ...p,
      notifications: {
        ...p.notifications,
        [field]: value
      }
    }));
    console.log('üîß Profile Edit - Notifications updated:', field, value);
  }

  updatePrivacy(field: string, value: any): void {
    this.profile.update(p => ({
      ...p,
      privacy: {
        ...p.privacy,
        [field]: value
      }
    }));
    console.log('üîß Profile Edit - Privacy updated:', field, value);
  }

  toggleInterest(interest: string): void {
    this.profile.update(p => ({
      ...p,
      interests: p.interests.includes(interest) 
        ? p.interests.filter(i => i !== interest)
        : [...p.interests, interest]
    }));
    console.log('üîß Profile Edit - Interest toggled:', interest);
  }

  toggleSubject(subject: string): void {
    this.profile.update(p => ({
      ...p,
      preferredSubjects: p.preferredSubjects.includes(subject) 
        ? p.preferredSubjects.filter(s => s !== subject)
        : [...p.preferredSubjects, subject]
    }));
    console.log('üîß Profile Edit - Subject toggled:', subject);
  }

  toggleStudyDay(day: string): void {
    this.profile.update(p => ({
      ...p,
      studySchedule: {
        ...p.studySchedule,
        studyDays: p.studySchedule.studyDays.includes(day) 
          ? p.studySchedule.studyDays.filter(d => d !== day)
          : [...p.studySchedule.studyDays, day]
      }
    }));
    console.log('üîß Profile Edit - Study day toggled:', day);
  }

  addLearningGoal(): void {
    this.profile.update(p => ({
      ...p,
      learningGoals: [...p.learningGoals, '']
    }));
    console.log('üîß Profile Edit - Learning goal added');
  }

  removeLearningGoal(index: number): void {
    this.profile.update(p => ({
      ...p,
      learningGoals: p.learningGoals.filter((_, i) => i !== index)
    }));
    console.log('üîß Profile Edit - Learning goal removed:', index);
  }

  addSocialLink(): void {
    this.profile.update(p => ({
      ...p,
      socialLinks: [...p.socialLinks, { platform: 'linkedin', url: '', isPublic: true }]
    }));
    console.log('üîß Profile Edit - Social link added');
  }

  removeSocialLink(index: number): void {
    this.profile.update(p => ({
      ...p,
      socialLinks: p.socialLinks.filter((_, i) => i !== index)
    }));
    console.log('üîß Profile Edit - Social link removed:', index);
  }

  resetProfile(): void {
    if (confirm('B·∫°n c√≥ ch·∫Øc ch·∫Øn mu·ªën ƒë·∫∑t l·∫°i t·∫•t c·∫£ th√¥ng tin?')) {
      // Reset to original values
      this.profile.set({
        fullName: 'Nguy·ªÖn VƒÉn H·∫£i',
        email: 'student@demo.com',
        phone: '0123456789',
        dateOfBirth: '1995-06-15',
        address: '123 ƒê∆∞·ªùng ABC, Qu·∫≠n 1, TP.HCM',
        bio: 'T√¥i l√† sinh vi√™n nƒÉm 3 chuy√™n ng√†nh H√†ng h·∫£i t·∫°i Tr∆∞·ªùng ƒê·∫°i h·ªçc H√†ng h·∫£i Vi·ªát Nam.',
        interests: ['An to√†n h√†ng h·∫£i', 'ƒêi·ªÅu khi·ªÉn t√†u'],
        learningGoals: [
          'Ho√†n th√†nh ch·ª©ng ch·ªâ STCW',
          'ƒê·∫°t ƒë∆∞·ª£c ch·ª©ng ch·ªâ thuy·ªÅn tr∆∞·ªüng h·∫°ng 2'
        ],
        preferredSubjects: ['An to√†n h√†ng h·∫£i', 'ƒêi·ªÅu khi·ªÉn t√†u'],
        studySchedule: {
          preferredStudyTime: 'evening',
          studyDays: ['monday', 'wednesday', 'friday', 'sunday'],
          studyDuration: 3,
          breakInterval: 15
        },
        socialLinks: [
          {
            platform: 'linkedin',
            url: 'https://linkedin.com/in/nguyenvanhai',
            isPublic: true
          }
        ],
        notifications: {
          emailNotifications: true,
          pushNotifications: true,
          assignmentReminders: true,
          courseUpdates: true,
          forumUpdates: false
        },
        privacy: {
          profileVisibility: 'public',
          showEmail: false,
          showPhone: false,
          showProgress: true
        }
      });
      console.log('üîß Profile Edit - Profile reset');
    }
  }

  saveProfile(): void {
    console.log('üîß Profile Edit - Save profile');
    console.log('üîß Profile Edit - Profile data:', this.profile());
    
    // Mock save functionality
    alert('ƒê√£ l∆∞u th√¥ng tin h·ªì s∆° th√†nh c√¥ng!');
    
    // Navigate back to profile
    this.router.navigate(['/student/profile']).then(success => {
      if (success) {
        console.log('üîß Profile Edit - Navigation to profile successful');
      } else {
        console.error('üîß Profile Edit - Navigation to profile failed');
      }
    });
  }

  goBack(): void {
    console.log('üîß Profile Edit - Go back');
    this.router.navigate(['/student/profile']).then(success => {
      if (success) {
        console.log('üîß Profile Edit - Navigation back successful');
      } else {
        console.error('üîß Profile Edit - Navigation back failed');
      }
    });
  }
}