import { Component, OnInit, Inject } from '@angular/core';
import { CommonModule, DOCUMENT, isPlatformBrowser } from '@angular/common';
import { RouterModule } from '@angular/router';
import { CategoryHeroComponent } from './shared/category-hero.component';
import { CategoryCourseGridComponent } from './shared/category-course-grid.component';
import { CategoryCareerComponent } from './shared/category-career.component';
import { CategoryTrendsComponent } from './shared/category-trends.component';
import { Meta, Title } from '@angular/platform-browser';
import { PLATFORM_ID } from '@angular/core';

@Component({
  selector: 'app-navigation-category',
  standalone: true,
  imports: [CommonModule, RouterModule, CategoryHeroComponent, CategoryCourseGridComponent, CategoryCareerComponent, CategoryTrendsComponent],
  template: `
    <div class="min-h-screen bg-gray-50">
      <app-category-hero
        [title]="'ƒêi·ªÅu khi·ªÉn T√†u'"
        [subtitle]="'Navigation, radar, GPS, ECDIS'"
        [brandColor]="'green'"
        [gradientFrom]="'from-green-600'"
        [gradientVia]="'via-green-700'"
        [gradientTo]="'to-green-800'"
        [primaryCta]="{ text: 'Kh√°m ph√° kh√≥a h·ªçc', link: '/courses', queryParams: { category: 'navigation' } }"
      ></app-category-hero>

      <app-category-course-grid
        [title]="'Kh√≥a h·ªçc n·ªïi b·∫≠t'"
        [brandColor]="'green'"
        [viewAllLink]="'/courses'"
        [viewAllQueryParams]="{ category: 'navigation' }"
        [items]="[
          { id: 'radar-navigation', title: 'ƒêi·ªÅu h∆∞·ªõng Radar', description: 'Radar, ph√°t hi·ªán m·ª•c ti√™u v√† tr√°nh va ch·∫°m.', level: 'intermediate', price: 3200000, link: '/courses/radar-navigation' },
          { id: 'gps-ecdis', title: 'GPS & ECDIS', description: 'ƒê·ªãnh v·ªã to√†n c·∫ßu v√† ECDIS hi·ªán ƒë·∫°i.', level: 'advanced', price: 3800000, link: '/courses/gps-ecdis' },
          { id: 'celestial-nav', title: 'ƒêi·ªÅu h∆∞·ªõng Thi√™n vƒÉn', description: 'K·ªπ thu·∫≠t s·ª≠ d·ª•ng thi√™n th·ªÉ v√† sextant.', level: 'advanced', price: 4200000, link: '/courses/celestial-nav' }
        ]"
      ></app-category-course-grid>

      <app-category-career
        [brandColor]="'green'"
        [title]="'C∆° h·ªôi ngh·ªÅ nghi·ªáp'"
        [subtitle]="'Kh√°m ph√° c√°c v·ªã tr√≠ c√¥ng vi·ªác v√† c∆° h·ªôi thƒÉng ti·∫øn trong lƒ©nh v·ª±c ƒêi·ªÅu khi·ªÉn T√†u'"
        [cards]="[
          { title: 'Navigation Officer', description: 'Ch·ªãu tr√°ch nhi·ªám ƒëi·ªÅu h∆∞·ªõng v√† v·∫≠n h√†nh t√†u bi·ªÉn', salary: '18-30 tri·ªáu VNƒê/th√°ng', requirements: ['Ch·ª©ng ch·ªâ Navigation', 'Kinh nghi·ªám 3-5 nƒÉm', 'Th√†nh th·∫°o ECDIS, GPS'] },
          { title: 'Chief Officer', description: 'Ph√≥ thuy·ªÅn tr∆∞·ªüng, qu·∫£n l√Ω ho·∫°t ƒë·ªông ƒëi·ªÅu h∆∞·ªõng', salary: '25-40 tri·ªáu VNƒê/th√°ng', requirements: ['Ch·ª©ng ch·ªâ Chief Officer', 'Kinh nghi·ªám 5+ nƒÉm', 'K·ªπ nƒÉng l√£nh ƒë·∫°o'] },
          { title: 'Master Mariner', description: 'Thuy·ªÅn tr∆∞·ªüng, ch·ªâ huy t√†u v√† to√†n b·ªô ho·∫°t ƒë·ªông', salary: '35-60 tri·ªáu VNƒê/th√°ng', requirements: ['Ch·ª©ng ch·ªâ Master', 'Kinh nghi·ªám 8+ nƒÉm', 'B·∫±ng ƒë·∫°i h·ªçc h√†ng h·∫£i'] }
        ]"
      ></app-category-career>

      <app-category-trends
        [brandColor]="'green'"
        [title]="'Xu h∆∞·ªõng ng√†nh'"
        [subtitle]="'C√°c xu h∆∞·ªõng n·ªïi b·∫≠t trong lƒ©nh v·ª±c ƒêi·ªÅu khi·ªÉn T√†u'"
        [cards]="[
          { icon: 'üß≠', title: 'ƒêi·ªÅu h∆∞·ªõng s·ªë', highlight: '+20% √°p d·ª•ng', description: 'TƒÉng c∆∞·ªùng s·ª≠ d·ª•ng ECDIS, h·ªá th·ªëng s·ªë v√† c·∫£m bi·∫øn hi·ªán ƒë·∫°i trong ƒëi·ªÅu h∆∞·ªõng.' },
          { icon: 'üõ∞Ô∏è', title: 'T√≠ch h·ª£p GNSS', highlight: '+30% ƒë·ªô ch√≠nh x√°c', description: 'K·∫øt h·ª£p nhi·ªÅu h·ªá th·ªëng v·ªá tinh (GPS, GLONASS, Galileo) ƒë·ªÉ tƒÉng ƒë·ªô tin c·∫≠y.' }
        ]"
      ></app-category-trends>
    </div>
  `
})
export class NavigationCategoryComponent implements OnInit {
  constructor(
    private title: Title,
    private meta: Meta,
    @Inject(DOCUMENT) private document: Document,
    @Inject(PLATFORM_ID) private platformId: Object
  ) {}

  ngOnInit(): void {
    const pageTitle = 'ƒêi·ªÅu khi·ªÉn T√†u - LMS Maritime';
    const description = 'Navigation, radar, GPS, ECDIS. Kh√≥a h·ªçc ƒëi·ªÅu h∆∞·ªõng h√†ng h·∫£i hi·ªán ƒë·∫°i.';
    this.title.setTitle(pageTitle);
    this.meta.updateTag({ name: 'description', content: description });
    this.meta.updateTag({ property: 'og:title', content: pageTitle });
    this.meta.updateTag({ property: 'og:description', content: description });
    this.injectJsonLd('jsonld-category-navigation', {
      '@context': 'https://schema.org',
      '@type': 'CollectionPage',
      name: 'ƒêi·ªÅu khi·ªÉn T√†u',
      description,
      about: 'navigation',
      isPartOf: { '@type': 'WebSite', name: 'LMS Maritime' }
    });
  }

  private injectJsonLd(id: string, data: unknown): void {
    if (!isPlatformBrowser(this.platformId)) return;
    let scriptEl = this.document.getElementById(id) as HTMLScriptElement | null;
    if (!scriptEl) {
      scriptEl = this.document.createElement('script');
      scriptEl.type = 'application/ld+json';
      scriptEl.id = id;
      this.document.head.appendChild(scriptEl);
    }
    scriptEl.text = JSON.stringify(data);
  }
}
